{"version":3,"file":"create.spec.js","sourceRoot":"","sources":["../../src/test/create.spec.ts"],"names":[],"mappings":";;AAAA,uCAAsC;AACtC,uCAA4C;AAE5C,MAAM,IAAI,GAAG,IAAA,iBAAO,EAAC,mBAAS,CAAC,CAAC;AAEhC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;IACvC,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QACnC,OAAO;YACL,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC;gBACxC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gBAClC,WAAW,EAAE,IAAI;aAClB,CAAC;SACH,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,0CAA0C,EAAE,CAAC,CAAC,EAAE,EAAE;QACrD,MAAM,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACpE,IAAA,gBAAM,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,KAAK,CAAC,6BAA6B,EAAE,CAAC,IAAI,EAAE,EAAE;QACjD,IAAI,CAAC,8BAA8B,EAAE,CAAC,CAAC,EAAE,EAAE;YACzC,IAAA,gBAAM,EAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,6BAA6B,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1F,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE,aAAa;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qDAAqD,EAAE,CAAC,CAAC,EAAE,EAAE;YAChE,IAAA,gBAAM,EAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,6BAA6B,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACzF,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,EAAE;aACT,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { ctxTsNode } from './helpers';\nimport { context, expect } from './testlib';\n\nconst test = context(ctxTsNode);\n\ntest.suite('create', ({ contextEach }) => {\n  const test = contextEach(async (t) => {\n    return {\n      service: t.context.tsNodeUnderTest.create({\n        compilerOptions: { target: 'es5' },\n        skipProject: true,\n      }),\n    };\n  });\n\n  test('should create generic compiler instances', (t) => {\n    const output = t.context.service.compile('const x = 10', 'test.ts');\n    expect(output).toMatch('var x = 10;');\n  });\n\n  test.suite('should get type information', (test) => {\n    test('given position of identifier', (t) => {\n      expect(t.context.service.getTypeInfo('/**jsdoc here*/const x = 10', 'test.ts', 21)).toEqual({\n        comment: 'jsdoc here',\n        name: 'const x: 10',\n      });\n    });\n    test('given position that does not point to an identifier', (t) => {\n      expect(t.context.service.getTypeInfo('/**jsdoc here*/const x = 10', 'test.ts', 0)).toEqual({\n        comment: '',\n        name: '',\n      });\n    });\n  });\n});\n"]}