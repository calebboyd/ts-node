{"version":3,"file":"regression.spec.js","sourceRoot":"","sources":["../../src/test/regression.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Misc regression tests go here if they do not have a better home\n\nimport * as exp from 'expect';\nimport { join } from 'path';\nimport type { CreateOptions } from '..';\nimport { createExec, createExecTester } from './helpers/exec';\nimport { CMD_TS_NODE_WITHOUT_PROJECT_FLAG, ctxTsNode, DIST_DIR, TEST_DIR, tsSupportsMtsCtsExtensions } from './helpers';\nimport { context, ExecutionContext, expect } from './testlib';\n\nconst test = context(ctxTsNode);\nconst exec = createExecTester({\n  exec: createExec({\n    cwd: TEST_DIR,\n  }),\n});\n\ntest('#2076 regression test', async () => {\n  const r = await exec({\n    exec: createExec({\n      cwd: join(TEST_DIR, '2076'),\n    }),\n    cmd: `${CMD_TS_NODE_WITHOUT_PROJECT_FLAG} --showConfig`,\n  });\n\n  exp(r.err).toBeNull();\n});\n\ntest('#1488 regression test', async () => {\n  // Scenario that caused the bug:\n  // `allowJs` turned on\n  // `skipIgnore` turned on so that ts-node tries to compile itself (not ideal but theoretically we should be ok with this)\n  // Attempt to `require()` a `.js` file\n  // `assertScriptCanLoadAsCJS` is triggered within `require()`\n  // `./package.json` needs to be fetched into cache via `assertScriptCanLoadAsCJS` which caused a recursive `require()` call\n  // Circular dependency warning is emitted by node\n\n  const r = await exec({\n    exec: createExec({\n      cwd: join(TEST_DIR, '1488'),\n    }),\n    cmd: `${CMD_TS_NODE_WITHOUT_PROJECT_FLAG} ./index.js`,\n  });\n\n  exp(r.err).toBeNull();\n\n  // Assert that we do *not* get `Warning: Accessing non-existent property 'getOptionValue' of module exports inside circular dependency`\n  exp(r.stdout).toBe('foo\\n'); // prove that it ran\n  exp(r.stderr).toBe(''); // prove that no warnings\n});\n\ntest.suite('issue #1098', (test) => {\n  function testAllowedExtensions(\n    t: ExecutionContext<ctxTsNode.Ctx>,\n    compilerOptions: CreateOptions['compilerOptions'],\n    allowed: string[]\n  ) {\n    const disallowed = allExtensions.filter((ext) => !allowed.includes(ext));\n    const { ignored } = t.context.tsNodeUnderTest.create({\n      compilerOptions,\n      skipProject: true,\n    });\n    for (const ext of allowed) {\n      t.log(`Testing that ${ext} files are allowed`);\n      expect(ignored(join(DIST_DIR, `index${ext}`))).toBe(false);\n    }\n    for (const ext of disallowed) {\n      t.log(`Testing that ${ext} files are ignored`);\n      expect(ignored(join(DIST_DIR, `index${ext}`))).toBe(true);\n    }\n  }\n\n  const allExtensions = [\n    '.ts',\n    '.js',\n    '.d.ts',\n    '.mts',\n    '.cts',\n    '.d.mts',\n    '.d.cts',\n    '.mjs',\n    '.cjs',\n    '.tsx',\n    '.jsx',\n    '.xyz',\n    '',\n  ];\n  const mtsCts = tsSupportsMtsCtsExtensions ? ['.mts', '.cts', '.d.mts', '.d.cts'] : [];\n  const mjsCjs = tsSupportsMtsCtsExtensions ? ['.mjs', '.cjs'] : [];\n\n  test('correctly filters file extensions from the compiler when allowJs=false and jsx=false', (t) => {\n    testAllowedExtensions(t, {}, ['.ts', '.d.ts', ...mtsCts]);\n  });\n  test('correctly filters file extensions from the compiler when allowJs=true and jsx=false', (t) => {\n    testAllowedExtensions(t, { allowJs: true }, ['.ts', '.js', '.d.ts', ...mtsCts, ...mjsCjs]);\n  });\n  test('correctly filters file extensions from the compiler when allowJs=false and jsx=true', (t) => {\n    testAllowedExtensions(t, { allowJs: false, jsx: 'preserve' }, ['.ts', '.tsx', '.d.ts', ...mtsCts]);\n  });\n  test('correctly filters file extensions from the compiler when allowJs=true and jsx=true', (t) => {\n    testAllowedExtensions(t, { allowJs: true, jsx: 'preserve' }, [\n      '.ts',\n      '.tsx',\n      '.js',\n      '.jsx',\n      '.d.ts',\n      ...mtsCts,\n      ...mjsCjs,\n    ]);\n  });\n});\n"]}