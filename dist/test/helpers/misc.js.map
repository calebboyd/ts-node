{"version":3,"file":"misc.js","sourceRoot":"","sources":["../../../src/test/helpers/misc.ts"],"names":[],"mappings":";;;AAEA,mCAAmC;AACnC,+BAA4B;AAC5B,+BAAiC;AACjC,mCAAuC;AAG1B,QAAA,eAAe,GAAG,IAAA,sBAAa,EAAC,IAAA,WAAI,EAAC,gBAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;AAE5D,QAAA,EAAE,GAAG,IAAA,uBAAe,EAAC,YAAY,CAAgC,CAAC;AAElE,QAAA,KAAK,GAAG,IAAA,gBAAS,EAAC,UAAU,CAAC,CAAC;AAE3C,6EAA6E;AAC7E,SAAgB,OAAO,CAAI,KAAQ,EAAE,oBAAsC;IACzE,OAAO,oBAAoB,CAAC,QAAQ,CAAC,KAAY,CAAC,CAAC;AACrD,CAAC;AAFD,0BAEC","sourcesContent":["/** types from ts-node under test */\nimport type * as tsNodeTypes from '../../index';\nimport { TEST_DIR } from './paths';\nimport { join } from 'path';\nimport { promisify } from 'util';\nimport { createRequire } from 'module';\nexport { tsNodeTypes };\n\nexport const testsDirRequire = createRequire(join(TEST_DIR, 'index.js'));\n\nexport const ts = testsDirRequire('typescript') as typeof import('typescript');\n\nexport const delay = promisify(setTimeout);\n\n/** Essentially Array:includes, but with tweaked types for checks on enums */\nexport function isOneOf<V>(value: V, arrayOfPossibilities: ReadonlyArray<V>) {\n  return arrayOfPossibilities.includes(value as any);\n}\n"]}