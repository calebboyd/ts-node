{"version":3,"file":"version-checks.js","sourceRoot":"","sources":["../../../src/test/helpers/version-checks.ts"],"names":[],"mappings":";;;AAAA,iCAAkC;AAClC,iCAA4B;AAE5B,sDAAsD;AAEzC,QAAA,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC1E,sGAAsG;AACtG,0HAA0H;AAC7G,QAAA,4BAA4B,GACvC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAChF,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxC,8DAA8D;AAC9D,uIAAuI;AACvI,6HAA6H;AAChH,QAAA,gCAAgC,GAC3C,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAChF,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxC,4FAA4F;AAC5F,yBAAyB;AACzB,sHAAsH;AACtH,wEAAwE;AAC3D,QAAA,0CAA0C,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACjG,sEAAsE;AACzD,QAAA,8BAA8B,GAAG,SAAE,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC/G,8EAA8E;AACjE,QAAA,0BAA0B,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC7D,QAAA,0BAA0B,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC1E,2IAA2I;AAC9H,QAAA,6BAA6B,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC7E,4CAA4C;AAC/B,QAAA,oCAAoC,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACxF,0EAA0E;AAC7D,QAAA,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAC1E,mCAAmC;AACtB,QAAA,8BAA8B,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC9E,0EAA0E;AAC1E,mBAAmB;AACN,QAAA,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACnD,QAAA,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACnD,QAAA,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,SAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC","sourcesContent":["import semver = require('semver');\nimport { ts } from './misc';\n\n// Version checks, used to conditionally enable tests.\n\nexport const nodeUsesNewHooksApi = semver.gte(process.version, '16.12.0');\n// 16.14.0: https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V16.md#notable-changes-4\n// 17.1.0: https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V17.md#2021-11-09-version-1710-current-targos\nexport const nodeSupportsImportAssertions =\n  (semver.gte(process.version, '16.14.0') && semver.lt(process.version, '17.0.0')) ||\n  semver.gte(process.version, '17.1.0');\n// These versions do not require `--experimental-json-modules`\n// 16.15.0: https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V16.md#2022-04-26-version-16150-gallium-lts-danielleadams\n// 17.5.0: https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V17.md#2022-02-10-version-1750-current-ruyadorno\nexport const nodeSupportsUnflaggedJsonImports =\n  (semver.gte(process.version, '16.15.0') && semver.lt(process.version, '17.0.0')) ||\n  semver.gte(process.version, '17.5.0');\n// Node 14.13.0 has a bug where it tries to lex CJS files to discover named exports *before*\n// we transform the code.\n// In other words, it tries to parse raw TS as CJS and balks at `export const foo =`, expecting to see `exports.foo =`\n// This lexing only happens when CJS TS is imported from the ESM loader.\nexport const nodeSupportsImportingTransformedCjsFromEsm = semver.gte(process.version, '14.13.1');\n/** Supports module:nodenext and module:node16 as *stable* features */\nexport const tsSupportsStableNodeNextNode16 = ts.version.startsWith('4.7.') || semver.gte(ts.version, '4.7.0');\n// TS 4.5 is first version to understand .cts, .mts, .cjs, and .mjs extensions\nexport const tsSupportsMtsCtsExtensions = semver.gte(ts.version, '4.5.0');\nexport const tsSupportsImportAssertions = semver.gte(ts.version, '4.5.0');\n// TS 4.1 added jsx=react-jsx and react-jsxdev: https://devblogs.microsoft.com/typescript/announcing-typescript-4-1/#react-17-jsx-factories\nexport const tsSupportsReact17JsxFactories = semver.gte(ts.version, '4.1.0');\n// TS 5.0 added \"allowImportingTsExtensions\"\nexport const tsSupportsAllowImportingTsExtensions = semver.gte(ts.version, '4.999.999');\n// TS 5.0 adds ability for tsconfig to `\"extends\": []` an array of configs\nexport const tsSupportsExtendsArray = semver.gte(ts.version, '4.999.999');\n// TS 5.0 adds verbatimModuleSyntax\nexport const tsSupportsVerbatimModuleSyntax = semver.gte(ts.version, '5.0.0');\n// Relevant when @tsconfig/bases refers to es2021 and we run tests against\n// old TS versions.\nexport const tsSupportsEs2021 = semver.gte(ts.version, '4.3.0');\nexport const tsSupportsEs2022 = semver.gte(ts.version, '4.6.0');\nexport const tsSupportsLibEs2023 = semver.gte(ts.version, '5.0.0');\n"]}